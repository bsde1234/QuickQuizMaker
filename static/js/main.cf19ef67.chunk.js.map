{"version":3,"sources":["assets/logo.svg","assets/icons/select_arrow_down.svg","assets/authForAccess.svg","assets/icons/edit.svg","assets/icons/delete.svg","assets/icons/arrow-go.svg","assets/icons/done.svg","assets/thatsAllText.svg","hooks/useToastify.js","context/auth.js","context/quizes.js","components/UI/Heading.js","components/UI/ButtonLink.js","components/PrivateRoute/style.js","components/PrivateRoute/AccessDenied.js","components/PrivateRoute/PrivateRoute.js","components/Navigation/NavigationItems/style.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/style.js","components/Navigation/Navigation.js","components/UI/HamburgerMenu.js","components/Navigation/MobileNavigation/style.js","components/Navigation/MobileNavigation/MobileNavigation.js","theme/theme.js","theme/GlobalStyle.js","components/UI/Paragraph.js","views/HomePage/style.js","views/HomePage/HomePage.js","components/ErrorModal/style.js","components/ErrorModal/ErrorModal.js","components/QuizLibraryItem/style.js","components/QuizLibraryItem/QuizLibraryItem.js","components/UI/Spinner.js","views/QuizLibrary/style.js","views/QuizLibrary/QuizLibrary.js","components/UI/Input.js","components/UI/Button.js","components/UI/RadioButton.js","components/MakeQuestion/style.js","components/MakeQuestion/answerTypes/answersTypes.js","components/MakeQuestion/MakeQuestion.js","components/TitlePage/style.js","components/TitlePage/TitlePage.js","views/QuizBuilder/QuizBuilder.js","components/UI/QuestionsCounter.js","components/QuestionsList/style.js","components/QuestionsList/QuestionsList.js","views/QuizPlayer/style.js","views/QuizPlayer/QuizPlayer.js","views/Result/style.js","views/Result/Result.js","views/Auth/style.js","views/Auth/Auth.js","components/Logout/Logout.js","App.js","index.js"],"names":["module","exports","ToastContainer","styled","Container","theme","small","useToastify","customText","showToast","notificationText","type","toast","position","POSITION","TOP_CENTER","autoClose","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","token","userId","error","loading","authState","setAuthState","setAuthExpiration","useCallback","expirationTime","setTimeout","logoutFn","localStorage","clear","autoAuthCheck","oldState","getItem","Date","expiresIn","getTime","Provider","value","authFn","email","password","method","authUrl","axios","post","process","returnSecureToken","then","response","expirationDate","data","setItem","idToken","localId","catch","errorMessage","message","toLowerCase","split","join","QuizesContext","QuizesProvider","props","quizes","setQuizes","errorMsg","quizesState","setQuizesState","API_URL","fetchQuizes","onlyUser","fetchString","get","responseData","Object","entries","map","el","push","serverId","err","postQuiz","quiz","fetchSingleQuiz","id","res","values","removeQuiz","fetchOnlyUser","delete","clearError","useQuizes","Heading","h1","bold","textSize","xl","ButtonLink","button","primary","xs","regular","Wrapper","div","MainImage","authVector","medium","HeadingStyled","ButtonLinkStyled","light","AccessDenied","useHistory","onClick","PrivateRoute","Component","component","rest","render","StyledUnorderedList","ul","isOpen","css","StyledListItem","li","LogoutButton","mainBg","NavigationItems","closeFn","title","to","exact","defaultProps","StyledWrapper","StyledNavigation","nav","LogoStyled","logo","Navigation","HamburgerWrapper","HamburgerBar","HamburgerMenu","clickedFn","MobileNavWrapper","ContentWrapper","Menu","MobileNavigation","setIsOpen","toggleOpen","primaryLight","primaryDark","lightGrey","secondary","secondaryDark","pink","darkPink","red","blue","darkBlue","green","darkGreen","l","m","s","large","GlobalStyle","createGlobalStyle","Paragraph","h3","HomePage","ModalBackground","ModalWindow","ParagraphStyled","ButtonStyled","ErrorModal","closeModalFn","backgroundRef","useRef","useEffect","e","target","current","backgroundElement","addEventListener","removeEventListener","ref","fadeIn","keyframes","numInOrder","isOwner","InfoWrapper","ButtonWrapperRow","ButtonWrapperColumn","QuestionsCounter","IconButton","big","icon","color","QuizElement","description","questionsQuantity","userQuiz","deleteQuizFn","openQuizFn","editQuizFn","as","editIcon","deleteIcon","arrowGoIcon","undefined","HalfSpinner","isVisible","size","animationDuration","Spinner","className","LibraryControlsWrapper","LabelStyled","label","active","LibraryNavigationItem","input","QuizLibrary","history","setFetchOnlyUser","isAuthenticated","showOnlyUserQuizesHandler","boolean","deleteQuizHandler","openQuizHandler","editQuizHandler","content","index","QuizLibraryItem","key","questions","length","libraryControls","htmlFor","name","InputStyled","gridArea","TextareaStyled","textarea","SelectStyled","select","selectArrowIcon","Input","elementConfig","changed","inputElement","onChange","option","default","text","Button","RadioButton","ticked","activeColor","FlexColumnWrapper","FlexRowWrapper","GridAnswersWrapper","RelativeWrapper","standard","elementType","placeholder","correct","tickable","number","MakeQuestion","passQuestionInfo","moreThanOneAnswer","setMoreThanOneAnswer","questionType","setQuestionType","questionForm","setQuestionForm","answers","setAnswers","formRef","shortid","generate","answersTypes","nextQuestionHandler","finish","filter","questionData","question","reset","newAnswers","forEach","i","event","questionTypeHandler","newQuestionForm","changeAnswerInputHandler","tickAsTrueHandler","window","scrollTo","top","document","body","scrollHeight","behavior","pop","GridWrapper","TitlePage","passInfoToBuilder","maxLength","titleFormArray","array","config","changeInputHandler","elId","questionElement","titleData","QuizBuilder","path","match","quizInfo","setQuizInfo","isError","setIsError","setErrorMsg","setFinish","getTitleInfoHandler","titlePageData","getQuestionInfoHandler","isFinish","BarWrapper","ProgressBar","progress","ProgressColor","ProgressText","p","questionNumber","questionsLength","toFixed","QuestionStyled","NumberInput","userStage","AnswerWrapper","multiple","clicked","doneIcon","isCorrect","NumberInputWrapper","NumberControlWrapper","NumberControl","arrowIcon","Message","QuestionsList","checkCorrectFn","nextPageFn","setClicked","numberValue","setNumberValue","resultCounter","setResultCounter","answersRender","clickAnswerHandler","clickMultiAnswerHandler","numberControlHandler","methodType","Math","floor","true","false","QuizPlayer","params","actualStage","setActualStage","actualPage","setActualPage","find","currentQuestion","answerType","userAnswers","correctAnswers","keys","answerObj","sort","result","pathname","state","questionsNumber","MainTextWrapper","MainText","h2","thatsAllText","CircleOne","CircleTwo","CircleThree","CircleFour","CircleFive","ResultStyled","Result","location","percent","round","FormStyled","form","Auth","isLoginPage","inputs","setInputs","newInputs","preventDefault","Logout","ContentWrapperStyled","App","ReactDOM","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.cf19ef67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b81d7d62.svg\";","module.exports = __webpack_public_path__ + \"static/media/select_arrow_down.54efb753.svg\";","module.exports = __webpack_public_path__ + \"static/media/authForAccess.b0b7604f.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.026ce7a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.3d9575fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-go.95937f9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/done.2aca2b5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/thatsAllText.55f4dc9c.svg\";","/* eslint-disable import/prefer-default-export */\r\nimport { toast, ToastContainer as Container } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styled from 'styled-components';\r\n\r\nconst ToastContainer = styled(Container)`\r\n  position: fixed;\r\n  top: 3%;\r\n  right: 50%;\r\n  transform: translateX(-20%);\r\n  div {\r\n    border-radius: 15px;\r\n    text-align: center;\r\n    &::first-letter {\r\n      text-transform: capitalize;\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    transform: translateX(5%);\r\n    margin-top: 10px;\r\n    right: 50%;\r\n    max-width: 90vw;\r\n  }\r\n`;\r\n\r\nexport const useToastify = () => {\r\n  const customText = \"Whoops! Error has occurred! We're working on that!\";\r\n  const showToast = (notificationText = customText, type = 'info') =>\r\n    toast[type](notificationText, {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 2000,\r\n    });\r\n\r\n  return {\r\n    showToast,\r\n    ToastContainer,\r\n  };\r\n};\r\n","/* eslint-disable no-use-before-define */\r\nimport React, { useContext, useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { useToastify } from 'hooks/useToastify';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [authState, setAuthState] = useState({\r\n    token: '',\r\n    userId: '',\r\n    error: null,\r\n    loading: false,\r\n  });\r\n  const { showToast } = useToastify();\r\n\r\n  const authFn = (email, password, method) => {\r\n    setAuthState({\r\n      ...authState,\r\n      loading: true,\r\n    });\r\n    let authUrl =\r\n      'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=';\r\n    if (method === 'register') {\r\n      authUrl = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=`;\r\n    }\r\n    axios\r\n      .post(authUrl + API_KEY, {\r\n        email,\r\n        password,\r\n        returnSecureToken: true,\r\n      })\r\n      .then((response) => {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000,\r\n        );\r\n        localStorage.setItem('expirationDate', expirationDate);\r\n        localStorage.setItem('token', response.data.idToken);\r\n        localStorage.setItem('userId', response.data.localId);\r\n        setAuthExpiration(response.data.expiresIn);\r\n        setAuthState({\r\n          ...authState,\r\n          token: response.data.idToken,\r\n          userId: response.data.localId,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = error.response.data.error.message\r\n          .toLowerCase()\r\n          .split('_')\r\n          .join(' ');\r\n        showToast(errorMessage, 'error');\r\n        setAuthState({\r\n          ...authState,\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  const setAuthExpiration = useCallback((expirationTime) => {\r\n    setTimeout(() => {\r\n      logoutFn();\r\n    }, expirationTime * 1000);\r\n  }, []);\r\n\r\n  const logoutFn = () => {\r\n    localStorage.clear();\r\n    setAuthState({\r\n      token: '',\r\n      userId: '',\r\n      error: null,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  const autoAuthCheck = useCallback(() => {\r\n    setAuthState((oldState) => ({\r\n      ...oldState,\r\n      loading: true,\r\n    }));\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const expirationTime = new Date(localStorage.getItem('expirationDate'));\r\n      const userId = localStorage.getItem('userId');\r\n      const expiresIn =\r\n        (expirationTime.getTime() - new Date().getTime()) / 1000;\r\n      if (expirationTime.getTime() > new Date().getTime()) {\r\n        // Login again\r\n        setAuthState((oldState) => ({\r\n          ...oldState,\r\n          token,\r\n          userId,\r\n          loading: false,\r\n        }));\r\n        // setTimeout logout\r\n        setAuthExpiration(expiresIn);\r\n      } else {\r\n        logoutFn();\r\n      }\r\n    } else {\r\n      logoutFn();\r\n    }\r\n  }, [setAuthExpiration]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ authState, authFn, logoutFn, autoAuthCheck }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nAuthProvider.propTypes = {\r\n  children: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useState, useContext, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst QuizesContext = React.createContext([]);\r\n\r\nconst QuizesProvider = (props) => {\r\n  const [quizes, setQuizes] = useState([]);\r\n  const [quizesState, setQuizesState] = useState({\r\n    loading: false,\r\n    error: false,\r\n    errorMsg: '',\r\n  });\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL;\r\n\r\n  const token = localStorage.getItem('token');\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  const fetchQuizes = useCallback(\r\n    (onlyUser) => {\r\n      // Init fetch\r\n      setQuizesState((oldState) => ({\r\n        ...oldState,\r\n        loading: true,\r\n      }));\r\n      let fetchString = `${API_URL}quizes.json`;\r\n      if (onlyUser) {\r\n        fetchString += `?&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n      }\r\n      axios\r\n        .get(fetchString)\r\n        .then((response) => {\r\n          const responseData = [];\r\n          Object.entries(response.data).map((el) => {\r\n            responseData.push({ ...el[1], serverId: el[0] });\r\n            return undefined;\r\n          });\r\n          // Finish loading\r\n          setQuizesState((oldState) => ({\r\n            ...oldState,\r\n            loading: false,\r\n          }));\r\n          // Update fetched quizes\r\n          setQuizes(responseData);\r\n          return undefined;\r\n        })\r\n        .catch((err) => {\r\n          // Add error to state\r\n          setQuizesState({\r\n            error: true,\r\n            errorMsg: err.response.data.error,\r\n            loading: false,\r\n          });\r\n        });\r\n    },\r\n    [API_URL, userId, setQuizesState],\r\n  );\r\n\r\n  const fetchSingleQuiz = (id) => {\r\n    // Init fetch\r\n    setQuizesState({\r\n      ...quizesState,\r\n      loading: true,\r\n    });\r\n    axios\r\n      .get(`${API_URL}quizes.json?&orderBy=\"id\"&equalTo=\"${id}\"`)\r\n      .then((res) => {\r\n        // Finish loading\r\n        setQuizesState({\r\n          ...quizesState,\r\n          loading: false,\r\n        });\r\n        // Set single quiz in state\r\n        setQuizes(Object.values(res.data));\r\n      })\r\n      .catch((err) => {\r\n        // Add error to state\r\n        setQuizesState({\r\n          error: true,\r\n          errorMsg: err.response.data.error,\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  const postQuiz = (quiz) => {\r\n    const data = {\r\n      ...quiz,\r\n      userId,\r\n    };\r\n    axios\r\n      .post(`${API_URL}/quizes.json?auth=${token}`, data)\r\n      .then(() => {\r\n        fetchQuizes();\r\n      })\r\n      .catch((err) => {\r\n        // Add error to state\r\n        setQuizesState({\r\n          error: true,\r\n          errorMsg: err.response.data.error,\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  const removeQuiz = (serverId, fetchOnlyUser) => {\r\n    axios\r\n      .delete(`${API_URL}quizes/${serverId}.json?auth=${token}`)\r\n      .then(() => fetchQuizes(fetchOnlyUser))\r\n      .catch((err) => {\r\n        // Add error to state\r\n        setQuizesState({\r\n          error: true,\r\n          errorMsg: err.response.data.error,\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  const clearError = () => {\r\n    setQuizesState({\r\n      error: false,\r\n      errorMsg: '',\r\n      loading: false,\r\n    });\r\n  };\r\n  return (\r\n    <QuizesContext.Provider\r\n      value={{\r\n        quizesState,\r\n        quizes,\r\n        postQuiz,\r\n        fetchQuizes,\r\n        fetchSingleQuiz,\r\n        removeQuiz,\r\n        clearError,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default QuizesProvider;\r\n\r\nexport const useQuizes = () => useContext(QuizesContext);\r\n","import styled from 'styled-components';\r\n\r\nconst Heading = styled.h1`\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  font-size: ${({ theme }) => theme.textSize.xl};\r\n`;\r\n\r\nexport default Heading;\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonLink = styled.button`\r\n  display: inline;\r\n  color: ${({ theme }) => theme.primary};\r\n  font-size: ${({ theme }) => theme.textSize.xs};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  text-transform: uppercase;\r\n  text-decoration: underline;\r\n  border: 0;\r\n  padding: 0;\r\n  background: none;\r\n  cursor: pointer;\r\n\r\n  :hover,\r\n  :focus {\r\n    font-weight: ${({ theme }) => theme.bold};\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default ButtonLink;\r\n","import styled from 'styled-components';\r\n\r\nimport Heading from 'components/UI/Heading';\r\nimport ButtonLink from 'components/UI/ButtonLink';\r\nimport authVector from 'assets/authForAccess.svg';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport const MainImage = styled.div`\r\n  width: 50%;\r\n  height: 50%;\r\n  max-height: 500px;\r\n  margin-bottom: 30px;\r\n  background: url(${authVector}) center center no-repeat;\r\n  background-size: contain;\r\n\r\n  @media (max-width: ${({ theme }) => theme.medium}) {\r\n    width: 80%;\r\n    height: 60%;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    width: 80%;\r\n    height: 30%;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const HeadingStyled = styled(Heading)`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const ButtonLinkStyled = styled(ButtonLink)`\r\n  font-size: ${({ theme }) => theme.textSize.xs};\r\n  font-weight: ${({ theme }) => theme.light};\r\n`;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Wrapper, MainImage, HeadingStyled, ButtonLinkStyled } from './style';\r\n\r\nconst AccessDenied = () => {\r\n  const { push } = useHistory();\r\n  return (\r\n    <Wrapper>\r\n      <MainImage />\r\n      <HeadingStyled>Log in to make your own quiz!</HeadingStyled>\r\n      <ButtonLinkStyled onClick={() => push('/login')}>\r\n        GO TO LOGIN PAGE\r\n      </ButtonLinkStyled>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AccessDenied;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route } from 'react-router-dom';\r\nimport { useAuth } from 'context/auth';\r\n\r\nimport AccessDenied from './AccessDenied';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { authState } = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (authState.token) {\r\n          return <Component {...props} />;\r\n        }\r\n        return <AccessDenied />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.elementType.isRequired,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const StyledUnorderedList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 100px;\r\n  height: 100%;\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 25px;\r\n    height: auto;\r\n    transform: skewX(-40deg);\r\n    transition: opacity 0.15s ease-out 0s;\r\n    opacity: 0;\r\n\r\n    ${({ isOpen }) =>\r\n      isOpen &&\r\n      css`\r\n        opacity: 1;\r\n        transition: opacity 0.25s ease-in 0.4s;\r\n        color: red;\r\n      `}\r\n  }\r\n`;\r\n\r\nexport const StyledListItem = styled.li`\r\n  a {\r\n    display: inline-block;\r\n    text-align: center;\r\n    margin: 10px 0;\r\n    color: ${({ theme }) => theme.primary};\r\n    width: 100%;\r\n\r\n    @media (max-width: ${({ theme }) => theme.small}) {\r\n      text-align: right;\r\n      transform: skewX(40deg);\r\n    }\r\n\r\n    &:hover {\r\n      font-weight: ${({ theme }) => theme.bold};\r\n    }\r\n\r\n    ::before {\r\n      display: block;\r\n      content: attr(title);\r\n      height: 0;\r\n      font-weight: ${({ theme }) => theme.bold};\r\n      overflow: hidden;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n\r\n  .active {\r\n    font-weight: ${({ theme }) => theme.bold};\r\n  }\r\n`;\r\n\r\nexport const LogoutButton = styled(StyledListItem)`\r\n  display: flex;\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.primary};\r\n  height: 100px;\r\n  margin-top: auto;\r\n\r\n  a {\r\n    color: ${({ theme }) => theme.mainBg};\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    display: inline-block;\r\n    text-align: right;\r\n    /* margin: 10px 0; */\r\n    color: ${({ theme }) => theme.primary};\r\n    width: 100%;\r\n    font-weight: ${({ theme }) => theme.bold};\r\n    background: none;\r\n\r\n    a {\r\n      color: inherit;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useAuth } from 'context/auth';\r\nimport { StyledUnorderedList, StyledListItem, LogoutButton } from './style';\r\n\r\nconst NavigationItems = ({ isOpen, closeFn }) => {\r\n  const {\r\n    authState: { token },\r\n  } = useAuth();\r\n\r\n  return (\r\n    <StyledUnorderedList isOpen={isOpen}>\r\n      <StyledListItem>\r\n        <NavLink onClick={closeFn} title=\"Home\" to=\"/\" exact>\r\n          Home\r\n        </NavLink>\r\n      </StyledListItem>\r\n      <StyledListItem>\r\n        <NavLink onClick={closeFn} title=\"Make Quiz\" to=\"/make-quiz\">\r\n          Make Quiz\r\n        </NavLink>\r\n      </StyledListItem>\r\n      <StyledListItem>\r\n        <NavLink onClick={closeFn} title=\"Quizes\" to=\"/library\">\r\n          Quizes\r\n        </NavLink>\r\n      </StyledListItem>\r\n      <LogoutButton>\r\n        <NavLink\r\n          onClick={closeFn}\r\n          title=\"Logout\"\r\n          to={token ? '/logout' : '/login'}\r\n        >\r\n          {token ? 'Logout' : 'Sign In'}\r\n        </NavLink>\r\n      </LogoutButton>\r\n    </StyledUnorderedList>\r\n  );\r\n};\r\n\r\nNavigationItems.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  closeFn: PropTypes.func,\r\n};\r\n\r\nNavigationItems.defaultProps = {\r\n  isOpen: false,\r\n  closeFn: null,\r\n};\r\n\r\nexport default NavigationItems;\r\n","import styled from 'styled-components';\r\nimport logo from 'assets/logo.svg';\r\n\r\nexport const StyledWrapper = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background-color: ${({ theme }) => theme.mainBg};\r\n  box-shadow: 10px 0px 20px rgba(0, 0, 0, 0.1);\r\n  width: 180px;\r\n  height: 100vh;\r\n  border-right: 1px solid ${({ theme }) => theme.primary};\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const StyledNavigation = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 80px 0 0;\r\n  width: 100%;\r\n  max-width: 1024px;\r\n  height: 100%;\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    flex-direction: row;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const LogoStyled = styled.div`\r\n  width: 100%;\r\n  height: 80px;\r\n  background-image: url(${logo});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  margin-bottom: 100px;\r\n\r\n  :hover {\r\n    filter: brightness(1.1);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavigationItems from './NavigationItems/NavigationItems';\r\nimport { StyledWrapper, StyledNavigation, LogoStyled } from './style';\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <StyledWrapper>\r\n      <StyledNavigation>\r\n        <div>\r\n          <Link to=\"/\">\r\n            <LogoStyled />\r\n          </Link>\r\n        </div>\r\n        <NavigationItems />\r\n      </StyledNavigation>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst HamburgerWrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-top: 14px;\r\n  width: 26px;\r\n  height: 23px;\r\n  cursor: pointer;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    css`\r\n      position: relative;\r\n\r\n      div:nth-child(1) {\r\n        position: absolute;\r\n        transform: rotate(-45deg);\r\n        top: 50%;\r\n        left: 0;\r\n      }\r\n\r\n      div:nth-child(3) {\r\n        position: absolute;\r\n        transform: rotate(45deg);\r\n        top: 50%;\r\n        right: 0;\r\n      }\r\n\r\n      div:nth-child(2) {\r\n        opacity: 0;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst HamburgerBar = styled.div`\r\n  width: 100%;\r\n  height: 4px;\r\n  border-radius: 20px;\r\n  background-color: ${({ theme }) => theme.primary};\r\n  transition: transform 0.3s ease-out, opacity 0.3s ease-out;\r\n  transform-origin: 50% 50%;\r\n`;\r\n\r\nconst HamburgerMenu = ({ isOpen, clickedFn }) => {\r\n  return (\r\n    <>\r\n      <HamburgerWrapper isOpen={isOpen} onClick={clickedFn}>\r\n        <HamburgerBar />\r\n        <HamburgerBar />\r\n        <HamburgerBar />\r\n      </HamburgerWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nHamburgerMenu.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  clickedFn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default HamburgerMenu;\r\n","import styled, { css } from 'styled-components';\r\nimport logo from 'assets/logo.svg';\r\n\r\nexport const MobileNavWrapper = styled.div`\r\n  position: fixed;\r\n  background-color: ${({ theme }) => theme.mainBg};\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  border-bottom: 1px solid ${({ theme }) => theme.primary};\r\n  z-index: 999;\r\n\r\n  @media (min-width: ${({ theme }) => theme.small}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 85%;\r\n  margin: 10px auto 5px;\r\n`;\r\n\r\nexport const LogoStyled = styled.div`\r\n  display: inline-block;\r\n  width: 65px;\r\n  height: 50px;\r\n  background-image: url(${logo});\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n\r\n  :hover {\r\n    filter: brightness(1.1);\r\n  }\r\n`;\r\n\r\nexport const Menu = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: -100%;\r\n  z-index: -9;\r\n  width: 100vw;\r\n  height: 300px;\r\n  background-color: ${({ theme }) => theme.mainBg};\r\n  box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.2);\r\n  border-right: 1.5px solid ${({ theme }) => theme.primary};\r\n  opacity: 0;\r\n  transform: skew(0);\r\n  transform-origin: 100% 100%;\r\n  transition: all 0.4s ease-in-out;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    css`\r\n      transform: skew(-40deg);\r\n      opacity: 1;\r\n    `}\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HamburgerMenu from 'components/UI/HamburgerMenu';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport { ContentWrapper, LogoStyled, Menu, MobileNavWrapper } from './style';\r\n\r\nconst MobileNavigation = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleOpen = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <MobileNavWrapper>\r\n      <ContentWrapper isOpen={isOpen}>\r\n        <HamburgerMenu isOpen={isOpen} clickedFn={toggleOpen} />\r\n        <Link to=\"/\">\r\n          <LogoStyled />\r\n        </Link>\r\n        <Menu isOpen={isOpen} />\r\n      </ContentWrapper>\r\n      <NavigationItems isOpen={isOpen} closeFn={toggleOpen} />\r\n    </MobileNavWrapper>\r\n  );\r\n};\r\n\r\nexport default MobileNavigation;\r\n","const theme = {\r\n  mainBg: '#252C4A',\r\n  primary: '#8f98c1',\r\n  primaryLight: '#9EA3BC',\r\n  primaryDark: '#858DB5',\r\n  lightGrey: '#E1E2E6',\r\n  secondary: '#325579',\r\n  secondaryDark: `#424A6B`,\r\n  pink: '#FC4F69',\r\n  darkPink: '#d9364f',\r\n  red: '#EB1D1D',\r\n  blue: '#2C8CED',\r\n  darkBlue: '#1D79D6',\r\n  green: '#31C326',\r\n  darkGreen: '#1CA112',\r\n  light: '300',\r\n  regular: '400',\r\n  bold: '700',\r\n  textSize: {\r\n    xl: '3.3rem',\r\n    l: '2.8rem',\r\n    m: '2rem',\r\n    s: '1.6rem',\r\n    xs: '1.3rem',\r\n  },\r\n  small: '480px',\r\n  medium: '768px',\r\n  large: '1024px',\r\n};\r\n\r\nexport default theme;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n/* Box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n/* Remove default padding */\r\nul[class],\r\nol[class] {\r\n  padding: 0;\r\n}\r\n\r\n/* Remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nul[class],\r\nol[class],\r\nli,\r\nfigure,\r\nfigcaption,\r\nblockquote,\r\ndl,\r\ndd {\r\n  margin: 0;\r\n}\r\n\r\n/* Happy REM's */\r\nhtml {\r\n    font-size: 62.5%;\r\n}\r\n\r\n/* Set core body defaults */\r\nbody {\r\n  font-size: 1.6rem;\r\n  font-family: \"Lato\", sans-serif;\r\n  min-height: 100vh;\r\n  scroll-behavior: smooth;\r\n  text-rendering: optimizeSpeed;\r\n  line-height: 1.5;\r\n  background-color: #252C4A;\r\n  color: #9EA3BC;\r\n}\r\n\r\n/* Remove list styles on ul, ol elements with a class attribute */\r\nul[class],\r\nol[class] {\r\n  list-style: none;\r\n}\r\n\r\n/* A elements that don't have a class get default styles */\r\na:not([class]) {\r\n  text-decoration-skip-ink: auto;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n}\r\n\r\n/* Make images easier to work with */\r\nimg {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n/* Natural flow and rhythm in articles by default */\r\narticle > * + * {\r\n  margin-top: 1em;\r\n}\r\n\r\n/* Inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from 'styled-components';\r\n\r\nconst Paragraph = styled.h3`\r\n  font-weight: ${({ theme }) => theme.light};\r\n  font-size: ${({ theme }) => theme.textSize.m};\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport default Paragraph;\r\n","/* eslint-disable import/prefer-default-export */\r\n// There's gonna be more styled componentes in the future\r\nimport styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n         width: 100%;\r\n         height: 100%;\r\n         display: flex;\r\n         flex-direction: column;\r\n         justify-content: center;\r\n         align-items: center;\r\n         text-align: center;\r\n\r\n         ul {\r\n           padding: 0;\r\n           list-style: none;\r\n         }\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n           width: 90%;\r\n           margin: 0 auto;\r\n         }\r\n       `;\r\n","import React from 'react';\r\nimport Heading from 'components/UI/Heading';\r\nimport Paragraph from 'components/UI/Paragraph';\r\nimport { Wrapper } from './style';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Heading>Welcome in QuickQuizMaker</Heading>\r\n      <Paragraph>Enjoy your quick quiz maker...</Paragraph>\r\n      <br />\r\n      <br />\r\n      <h4>Register to be able to:</h4>\r\n      <ul>\r\n        <li>- Make your own quiz</li>\r\n        <li>- Maintain it (delete/edit)</li>\r\n      </ul>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import styled from 'styled-components';\r\nimport Heading from 'components/UI/Heading';\r\nimport Paragraph from 'components/UI/Paragraph';\r\n\r\nexport const ModalBackground = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  z-index: 10;\r\n`;\r\n\r\nexport const ModalWindow = styled.div`\r\n  padding: 20px 50px;\r\n  border-radius: 15px;\r\n  background: white;\r\n`;\r\n\r\nexport const HeadingStyled = styled(Heading)`\r\n  color: ${({ theme }) => theme.mainBg};\r\n  font-size: ${({ theme }) => theme.textSize.xl};\r\n`;\r\n\r\nexport const ParagraphStyled = styled(Paragraph)``;\r\n\r\nexport const ButtonStyled = styled.button`\r\n  background-color: ${({ theme }) => theme.mainBg};\r\n  color: white;\r\n  width: 80px;\r\n  height: 30px;\r\n  border-radius: 100px;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background-color: #191f38;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ModalBackground,\r\n  ModalWindow,\r\n  HeadingStyled,\r\n  ParagraphStyled,\r\n  ButtonStyled,\r\n} from './style';\r\n\r\nconst ErrorModal = ({ errorMessage, closeModalFn }) => {\r\n  const backgroundRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const clickedFn = (e) => {\r\n      if (e.target === backgroundRef.current) {\r\n        closeModalFn();\r\n      }\r\n    };\r\n\r\n    const backgroundElement = backgroundRef.current;\r\n    backgroundElement.addEventListener('click', clickedFn);\r\n    return () => {\r\n      backgroundElement.removeEventListener('click', clickedFn);\r\n    };\r\n  }, [closeModalFn]);\r\n\r\n  return (\r\n    <ModalBackground ref={backgroundRef}>\r\n      <ModalWindow>\r\n        <HeadingStyled>Whoops...</HeadingStyled>\r\n        <ParagraphStyled>{errorMessage}</ParagraphStyled>\r\n        <ButtonStyled onClick={closeModalFn}>Got It!</ButtonStyled>\r\n      </ModalWindow>\r\n    </ModalBackground>\r\n  );\r\n};\r\n\r\nErrorModal.propTypes = {\r\n  errorMessage: PropTypes.string.isRequired,\r\n  closeModalFn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ErrorModal;\r\n","import styled, { keyframes, css } from 'styled-components';\r\nimport Heading from 'components/UI/Heading';\r\nimport Paragraph from 'components/UI/Paragraph';\r\n\r\nconst fadeIn = keyframes`\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(50%);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0%);\r\n    }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n         position: relative;\r\n         margin: 0 auto 90px;\r\n         display: grid;\r\n         grid-template-columns: 3fr 1fr 1fr;\r\n         max-width: 800px;\r\n         min-height: 110px;\r\n         border: 1.5px solid ${({ theme }) => theme.primaryLight};\r\n         border-radius: 15px;\r\n         margin-bottom: 20px;\r\n         animation: 0.3s ${fadeIn} ease-out forwards;\r\n         opacity: 0;\r\n         transform: translateY(50%);\r\n         animation-delay: ${({ numInOrder }) => `${numInOrder * 0.1}s`};\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n           display: flex;\r\n           flex-direction: column;\r\n           text-align: center;\r\n           margin-bottom: 35px;\r\n\r\n           ${({isOwner}) => isOwner && css`\r\n           `}\r\n         }\r\n       `;\r\n\r\nexport const InfoWrapper = styled.div`\r\n         padding: 15px 20px;\r\n         max-width: 60%;\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n           max-width: none;\r\n           width: 100%;\r\n         }\r\n       `;\r\n\r\nexport const ButtonWrapperRow = styled.div`\r\n         position: absolute;\r\n         right: -25px;\r\n         top: 50%;\r\n         transform: translateY(-50%);\r\n         display: flex;\r\n         align-items: center;\r\n         flex-direction: row;\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n          position: relative;\r\n          flex-direction: column;\r\n          right: 50%;\r\n          top: auto;\r\n          bottom: -25px;\r\n          transform: translateX(50%);\r\n          }\r\n       `;\r\n\r\nexport const ButtonWrapperColumn = styled.div`\r\n         display: flex;\r\n         align-items: center;\r\n         flex-direction: column;\r\n         \r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n          flex-direction: row;\r\n         }\r\n       `;\r\n\r\nexport const HeadingStyled = styled(Heading)`\r\n  font-size: ${({ theme }) => theme.textSize.l};\r\n`;\r\n\r\nexport const ParagraphStyled = styled(Paragraph)`\r\n  font-size: ${({ theme }) => theme.textSize.s};\r\n  margin: 0;\r\n`;\r\n\r\nexport const QuestionsCounter = styled.div`\r\n         background-color: ${({ theme }) => theme.primaryLight};\r\n         align-self: stretch;\r\n         padding: 0 15px;\r\n         display: flex;\r\n         flex-direction: column;\r\n         justify-content: center;\r\n         text-align: center;\r\n         color: ${({ theme }) => theme.mainBg};\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n           padding: 7px 0;\r\n         }\r\n\r\n         h3 {\r\n           position: relative;\r\n           top: 5px;\r\n           font-size: ${({ theme }) => theme.textSize.xl};\r\n         }\r\n\r\n         p {\r\n           position: relative;\r\n           bottom: 5px;\r\n           font-weight: ${({ theme }) => theme.bold};\r\n         }\r\n       `;\r\n\r\nexport const IconButton = styled.button`\r\n  width: ${({ big }) => (big ? '45px' : '30px')};\r\n  height: ${({ big }) => (big ? '45px' : '30px')};\r\n  border-radius: 50px;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-size: 50%;\r\n  background-position: center center;\r\n  background-color: ${({ theme, color }) => theme[color]};\r\n  border: none;\r\n  margin: 3px;\r\n  transition: transform 150ms ease-in-out;\r\n  outline: none;\r\n\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.15);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Icons import\r\nimport editIcon from 'assets/icons/edit.svg';\r\nimport deleteIcon from 'assets/icons/delete.svg';\r\nimport arrowGoIcon from 'assets/icons/arrow-go.svg';\r\n\r\n// UI Imports\r\nimport {\r\n  Wrapper,\r\n  InfoWrapper,\r\n  ButtonWrapperRow,\r\n  ButtonWrapperColumn,\r\n  HeadingStyled,\r\n  ParagraphStyled,\r\n  QuestionsCounter,\r\n  IconButton,\r\n} from './style';\r\n\r\nconst QuizElement = ({\r\n  title,\r\n  description,\r\n  questionsQuantity,\r\n  id,\r\n  serverId,\r\n  userQuiz,\r\n  isOwner,\r\n  deleteQuizFn,\r\n  openQuizFn,\r\n  editQuizFn,\r\n  numInOrder,\r\n}) => {\r\n  return (\r\n    <Wrapper numInOrder={numInOrder} isOwner={isOwner}>\r\n      <InfoWrapper>\r\n        <HeadingStyled as=\"h2\">{title}</HeadingStyled>\r\n        <ParagraphStyled>{description}</ParagraphStyled>\r\n      </InfoWrapper>\r\n      <QuestionsCounter>\r\n        <h3>{questionsQuantity}</h3>\r\n        <p>questions</p>\r\n      </QuestionsCounter>\r\n      <ButtonWrapperRow>\r\n        {userQuiz || isOwner ? (\r\n          <ButtonWrapperColumn>\r\n            <IconButton\r\n              icon={editIcon}\r\n              color=\"blue\"\r\n              onClick={() => editQuizFn()}\r\n            />\r\n            <IconButton\r\n              onClick={() => deleteQuizFn(serverId)}\r\n              icon={deleteIcon}\r\n              color=\"red\"\r\n            />\r\n          </ButtonWrapperColumn>\r\n        ) : null}\r\n        <IconButton\r\n          onClick={() => openQuizFn(id)}\r\n          icon={arrowGoIcon}\r\n          color=\"primaryLight\"\r\n          big\r\n        />\r\n      </ButtonWrapperRow>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nQuizElement.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  questionsQuantity: PropTypes.number.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  serverId: PropTypes.string,\r\n  userQuiz: PropTypes.bool.isRequired,\r\n  isOwner: PropTypes.bool.isRequired,\r\n  deleteQuizFn: PropTypes.func.isRequired,\r\n  openQuizFn: PropTypes.func.isRequired,\r\n  editQuizFn: PropTypes.func.isRequired,\r\n  numInOrder: PropTypes.number.isRequired,\r\n};\r\n\r\nQuizElement.defaultProps = {\r\n  serverId: undefined,\r\n};\r\n\r\nexport default QuizElement;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst HalfSpinner = styled.div`\r\n  display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\r\n  width: ${({ size }) => `${size}px`};\r\n  height: ${({ size }) => `${size}px`};\r\n  border-radius: 100%;\r\n  position: relative;\r\n  margin: 0 auto;\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .circle {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n    border: 10px solid transparent;\r\n  }\r\n  .circle.circle-1 {\r\n    border-top-color: ${({ theme }) => theme.primaryDark};\r\n    animation: half-circle-spinner-animation\r\n      ${({ animationDuration }) => animationDuration}ms infinite;\r\n  }\r\n  .circle.circle-2 {\r\n    border-bottom-color: ${({ theme }) => theme.primaryLight};\r\n    animation: half-circle-spinner-animation\r\n      ${({ animationDuration }) => animationDuration}ms infinite alternate;\r\n  }\r\n  @keyframes half-circle-spinner-animation {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Spinner = ({ size, animationDuration, isVisible }) => (\r\n  <HalfSpinner\r\n    size={size}\r\n    animationDuration={animationDuration}\r\n    isVisible={isVisible}\r\n  >\r\n    <div className=\"circle circle-1\" />\r\n    <div className=\"circle circle-2\" />\r\n  </HalfSpinner>\r\n);\r\n\r\nSpinner.propTypes = {\r\n  size: PropTypes.number,\r\n  animationDuration: PropTypes.number,\r\n  isVisible: PropTypes.bool,\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  size: 60,\r\n  animationDuration: 1000,\r\n  isVisible: true,\r\n};\r\n\r\nexport default Spinner;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding-top: 90px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    padding-top: 120px;\r\n  }\r\n`;\r\n\r\nexport const LibraryControlsWrapper = styled.div`\r\n  text-align: center;\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  margin: 0 auto 30px;\r\n\r\n  & > :nth-child(even) {\r\n    margin: 0 20px;\r\n    display: inline;\r\n  }\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n  position: relative;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  border-radius: 50px;\r\n  width: 90px;\r\n  color: ${({ theme }) => theme.primaryDark};\r\n  text-align: center;\r\n  transition: width 0.3s ease-in-out;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      width: 150px;\r\n      background-color: ${({ theme }) => theme.primary};\r\n      color: ${({ theme }) => theme.mainBg};\r\n    `};\r\n`;\r\n\r\nexport const LibraryNavigationItem = styled.input`\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useAuth } from 'context/auth';\r\nimport { useToastify } from 'hooks/useToastify';\r\nimport { useQuizes } from 'context/quizes';\r\nimport ErrorModal from 'components/ErrorModal/ErrorModal';\r\nimport QuizLibraryItem from 'components/QuizLibraryItem/QuizLibraryItem';\r\nimport Spinner from 'components/UI/Spinner';\r\nimport {\r\n  Wrapper,\r\n  LibraryControlsWrapper,\r\n  LabelStyled,\r\n  LibraryNavigationItem,\r\n} from './style';\r\n\r\nconst QuizLibrary = ({ history: { push } }) => {\r\n  const {\r\n    quizes,\r\n    fetchQuizes,\r\n    removeQuiz,\r\n    quizesState: { loading, error, errorMsg },\r\n    clearError,\r\n  } = useQuizes();\r\n  const [fetchOnlyUser, setFetchOnlyUser] = useState(false);\r\n  const {\r\n    authState: { token: isAuthenticated, userId },\r\n  } = useAuth();\r\n  const { showToast } = useToastify();\r\n\r\n  useEffect(() => {\r\n    fetchQuizes(fetchOnlyUser);\r\n  }, [fetchOnlyUser, fetchQuizes]);\r\n\r\n  const showOnlyUserQuizesHandler = (boolean) => {\r\n    setFetchOnlyUser(boolean);\r\n  };\r\n\r\n  const deleteQuizHandler = (serverId) => {\r\n    removeQuiz(serverId, fetchOnlyUser);\r\n    showToast('Successfully deleted', 'error');\r\n  };\r\n\r\n  const openQuizHandler = (id) => {\r\n    push(`/quiz/${id}`);\r\n  };\r\n\r\n  const editQuizHandler = () => {\r\n    showToast(\"We're working on this function!\", 'info');\r\n  };\r\n\r\n  const content = loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    quizes.map((el, index) => (\r\n      <QuizLibraryItem\r\n        key={el.id}\r\n        id={el.id}\r\n        title={el.title}\r\n        description={el.description}\r\n        questionsQuantity={el.questions.length}\r\n        deleteQuizFn={deleteQuizHandler}\r\n        openQuizFn={openQuizHandler}\r\n        userQuiz={fetchOnlyUser}\r\n        serverId={el.serverId}\r\n        editQuizFn={editQuizHandler}\r\n        isOwner={el.userId === userId}\r\n        numInOrder={index}\r\n      />\r\n    ))\r\n  );\r\n\r\n  const libraryControls = (\r\n    <LibraryControlsWrapper>\r\n      <LabelStyled htmlFor=\"onlyUser\" active={!fetchOnlyUser}>\r\n        <LibraryNavigationItem\r\n          type=\"radio\"\r\n          id=\"onlyUser\"\r\n          name=\"onlyUser\"\r\n          onClick={() => showOnlyUserQuizesHandler(false)}\r\n        />\r\n        All Quizes\r\n      </LabelStyled>\r\n      <p>|</p>\r\n      <LabelStyled htmlFor=\"allUsers\" active={fetchOnlyUser}>\r\n        <LibraryNavigationItem\r\n          type=\"radio\"\r\n          id=\"allUsers\"\r\n          name=\"allUsers\"\r\n          onClick={() => showOnlyUserQuizesHandler(true)}\r\n        />\r\n        User Quizes\r\n      </LabelStyled>\r\n    </LibraryControlsWrapper>\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      {error && (\r\n        <ErrorModal closeModalFn={clearError} errorMessage={errorMsg} />\r\n      )}\r\n      {isAuthenticated && libraryControls}\r\n      {content}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nQuizLibrary.propTypes = {\r\n  history: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default QuizLibrary;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport selectArrowIcon from 'assets/icons/select_arrow_down.svg';\r\n\r\nconst InputStyled = styled.input`\r\n  background: none;\r\n  margin-bottom: 20px;\r\n  color: ${({ theme }) => theme.primary};\r\n  border: 2px solid ${({ theme }) => theme.secondary};\r\n  border-radius: 15px;\r\n  padding: 10px 20px;\r\n  width: 100%;\r\n  outline: none;\r\n\r\n  ::placeholder {\r\n    font-weight: ${({ theme }) => theme.light};\r\n    font-size: ${({ theme }) => theme.textSize.m};\r\n    color: ${({ theme }) => theme.secondary};\r\n\r\n    @media (max-width: ${({ theme }) => theme.medium}) {\r\n      font-size: ${({ theme }) => theme.textSize.s};\r\n    }\r\n  }\r\n\r\n  :focus {\r\n    background-color: rgba(255, 255, 255, 0.05);\r\n  }\r\n\r\n  ${({ gridArea }) =>\r\n    gridArea &&\r\n    css`\r\n      grid-area: ${gridArea};\r\n      margin-bottom: 0;\r\n    `}\r\n`;\r\n\r\nconst TextareaStyled = styled.textarea`\r\n  background: none;\r\n  margin-bottom: 20px;\r\n  color: ${({ theme }) => theme.primary};\r\n  border: 2px solid ${({ theme }) => theme.secondary};\r\n  border-radius: 15px;\r\n  padding: 10px 20px;\r\n  width: 100%;\r\n  outline: none;\r\n\r\n  ::placeholder {\r\n    font-weight: ${({ theme }) => theme.light};\r\n    font-size: ${({ theme }) => theme.textSize.m};\r\n    color: ${({ theme }) => theme.secondary};\r\n\r\n    @media (max-width: ${({ theme }) => theme.medium}) {\r\n      font-size: ${({ theme }) => theme.textSize.s};\r\n    }\r\n  }\r\n\r\n  :focus {\r\n    background-color: rgba(255, 255, 255, 0.05);\r\n  }\r\n\r\n  ${({ gridArea }) =>\r\n    gridArea &&\r\n    css`\r\n      grid-area: ${gridArea};\r\n      max-width: 100%;\r\n      margin-bottom: 0;\r\n    `}\r\n`;\r\n\r\nconst SelectStyled = styled.select`\r\n  background: none;\r\n  margin-bottom: 20px;\r\n  background-image: url(${selectArrowIcon});\r\n  background-repeat: no-repeat;\r\n  background-size: 18px;\r\n  background-position: 96% 52%;\r\n  appearance: none;\r\n  color: ${({ theme }) => theme.primary};\r\n  border: 2px solid ${({ theme }) => theme.secondary};\r\n  border-radius: 15px;\r\n  padding: 10px 20px;\r\n  width: 100%;\r\n  outline: none;\r\n\r\n  ::placeholder {\r\n    font-weight: ${({ theme }) => theme.light};\r\n    font-size: ${({ theme }) => theme.textSize.m};\r\n    color: ${({ theme }) => theme.secondary};\r\n\r\n    @media (max-width: ${({ theme }) => theme.medium}) {\r\n      font-size: ${({ theme }) => theme.textSize.s};\r\n    }\r\n  }\r\n\r\n  :focus {\r\n    background-color: rgba(255, 255, 255, 0.05);\r\n  }\r\n\r\n  ${({ gridArea }) =>\r\n    gridArea &&\r\n    css`\r\n      grid-area: ${gridArea};\r\n      max-width: 100%;\r\n      margin-bottom: 0;\r\n    `}\r\n`;\r\n\r\nconst Input = ({\r\n  id,\r\n  type,\r\n  elementConfig,\r\n  changed,\r\n  gridArea,\r\n}) => {\r\n  let inputElement = null;\r\n\r\n  switch (type) {\r\n    case 'input':\r\n      inputElement = (\r\n        <InputStyled\r\n          {...elementConfig}\r\n          onChange={(e) => changed(e, id)}\r\n          gridArea={gridArea}\r\n        />\r\n      );\r\n\r\n      break;\r\n    case 'textarea':\r\n      inputElement = (\r\n        <TextareaStyled\r\n          {...elementConfig}\r\n          onChange={(e) => changed(e, id)}\r\n          gridArea={gridArea}\r\n        />\r\n      );\r\n      break;\r\n    case 'select':\r\n      inputElement = (\r\n        <SelectStyled\r\n          name={id}\r\n          id={id}\r\n          onChange={(e) => changed(e, id)}\r\n        >\r\n          {elementConfig.map((option) => (\r\n            <option\r\n              key={option.value}\r\n              value={option.value}\r\n              default={option.default}\r\n            >\r\n              {option.text}\r\n            </option>\r\n          ))}\r\n        </SelectStyled>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = <p>It's not proper type.</p>;\r\n  }\r\n  return <>{inputElement}</>;\r\n};\r\n\r\nInput.propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  elementConfig: PropTypes.instanceOf(Object).isRequired,\r\n  gridArea: PropTypes.string,\r\n  changed: PropTypes.func.isRequired,\r\n};\r\n\r\nInput.defaultProps = {\r\n  gridArea: null,\r\n  id: null,\r\n};\r\n\r\nexport default Input;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 145px;\r\n  height: 55px;\r\n  border-radius: 15px;\r\n  border: none;\r\n  background-color: ${({ theme, color }) =>\r\n    color ? theme[color] : theme.blue};\r\n  color: white;\r\n  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);\r\n\r\n  ${({ gridArea }) =>\r\n    gridArea &&\r\n    css`\r\n      width: 100%;\r\n      height: 100%;\r\n      grid-area: ${gridArea};\r\n    `};\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.darkBlue};\r\n    outline: none;\r\n  }\r\n\r\n  ${({ color }) =>\r\n    color &&\r\n    (color === 'pink'\r\n      ? css`\r\n          :hover,\r\n          :focus {\r\n            background-color: ${({ theme }) =>\r\n              theme.darkPink};\r\n          }\r\n        `\r\n      : css`\r\n          :hover,\r\n          :focus {\r\n            background-color: ${({ theme }) =>\r\n              theme.darkGreen};\r\n          }\r\n        `)}\r\n\r\n  &::before {\r\n    content: '';\r\n    width: 150px;\r\n    height: 150px;\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    border-radius: 100px;\r\n    position: absolute;\r\n    bottom: -70px;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    width: 80px;\r\n    height: 80px;\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    border-radius: 100px;\r\n    position: absolute;\r\n    top: -30px;\r\n    left: -20px;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst RadioButton = styled.div`\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 16px;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-color: none;\r\n  border-radius: 20px;\r\n  border: 2px solid ${({ theme }) => theme.secondary};\r\n  cursor: pointer;\r\n\r\n  ${({ ticked }) =>\r\n    ticked &&\r\n    css`\r\n      background-color: ${({ theme, activeColor }) =>\r\n        activeColor ? theme[activeColor] : theme.green};\r\n      box-shadow: inset 0px 0px 0px 2px #252c4a;\r\n    `}\r\n`;\r\n\r\nexport default RadioButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding-top: 90px;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const FlexColumnWrapper = styled.div`\r\n         display: flex;\r\n         flex-direction: column;\r\n         justify-content: space-between;\r\n         align-items: flex-start;\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n           flex-direction: row;\r\n           align-items: unset;\r\n           margin-bottom: 15px;\r\n\r\n           > :nth-child(2) {\r\n             margin-left: 30px;\r\n           }\r\n         }\r\n       `;\r\n\r\nexport const FlexRowWrapper = styled.div`\r\n         display: flex;\r\n         flex-direction: row;\r\n         justify-content: space-between;\r\n         align-items: flex-start;\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n           align-items: center;\r\n           flex-direction: column;\r\n\r\n          > :last-child {\r\n            margin: 15px auto 30px;\r\n\r\n          }\r\n         }\r\n       `;\r\n\r\nexport const GridAnswersWrapper = styled.div`\r\n         display: grid;\r\n         grid-template-columns: 1fr 1fr;\r\n         grid-column-gap: 20px;\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n           display: block;\r\n         }\r\n       `;\r\n\r\nexport const RelativeWrapper = styled.div`\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n","export const standard = {\r\n  elementType: 'input',\r\n  elementConfig: {\r\n    type: 'text',\r\n    placeholder: 'Answer',\r\n  },\r\n  value: '',\r\n  correct: false,\r\n  tickable: true,\r\n};\r\n\r\nexport const number = {\r\n  elementType: 'input',\r\n  elementConfig: {\r\n    type: 'number',\r\n    placeholder: 'Correct number',\r\n  },\r\n  value: '',\r\n};\r\n\r\nexport const boolean = {\r\n  elementType: 'select',\r\n  value: 'true',\r\n  elementConfig: [\r\n    {\r\n      value: 'true',\r\n      id: 'true',\r\n      text: 'True',\r\n      default: true,\r\n    },\r\n    {\r\n      value: 'false',\r\n      text: 'False',\r\n      id: 'false',\r\n    },\r\n  ],\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport { useToastify } from 'hooks/useToastify';\r\n\r\n// UI Imports\r\nimport Paragraph from 'components/UI/Paragraph';\r\nimport Heading from 'components/UI/Heading';\r\nimport Input from 'components/UI/Input';\r\nimport Button from 'components/UI/Button';\r\nimport RadioButton from 'components/UI/RadioButton';\r\nimport ButtonLink from 'components/UI/ButtonLink';\r\nimport {\r\n  Wrapper,\r\n  FlexColumnWrapper,\r\n  FlexRowWrapper,\r\n  GridAnswersWrapper,\r\n  RelativeWrapper,\r\n} from './style';\r\n\r\nimport * as answersTypes from './answerTypes/answersTypes';\r\n\r\nconst MakeQuestion = ({ passQuestionInfo }) => {\r\n  const [moreThanOneAnswer, setMoreThanOneAnswer] = useState(false);\r\n  const [questionType, setQuestionType] = useState({\r\n    elementType: 'select',\r\n    elementConfig: [\r\n      {\r\n        value: 'single',\r\n        text: 'Single Response',\r\n        default: true,\r\n      },\r\n      { value: 'multiple', text: 'Multiple Response' },\r\n      { value: 'number', text: 'Correct Number' },\r\n      { value: 'boolean', text: 'True or False' },\r\n    ],\r\n    value: 'single',\r\n  });\r\n  const [questionForm, setQuestionForm] = useState({\r\n    elementType: 'input',\r\n    elementConfig: {\r\n      type: 'text',\r\n      placeholder: 'Your question',\r\n    },\r\n    value: '',\r\n  });\r\n  const [answers, setAnswers] = useState([]);\r\n  const { showToast } = useToastify();\r\n\r\n  const formRef = useRef();\r\n\r\n  useEffect(() => {\r\n    switch (questionType.value) {\r\n      case 'single':\r\n      case 'multiple':\r\n        setAnswers([\r\n          {\r\n            id: shortid.generate(),\r\n            ...answersTypes.standard,\r\n          },\r\n          {\r\n            id: shortid.generate(),\r\n            ...answersTypes.standard,\r\n          },\r\n        ]);\r\n        setMoreThanOneAnswer(true);\r\n        break;\r\n      case 'number':\r\n        setAnswers([\r\n          {\r\n            id: shortid.generate(),\r\n            ...answersTypes.number,\r\n          },\r\n        ]);\r\n        setMoreThanOneAnswer(false);\r\n        break;\r\n      case 'boolean':\r\n        setAnswers([\r\n          {\r\n            id: shortid.generate(),\r\n            ...answersTypes.boolean,\r\n          },\r\n        ]);\r\n        setMoreThanOneAnswer(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [questionType]);\r\n\r\n  const questionInputHandler = (event) => {\r\n    const newQuestionForm = { ...questionForm };\r\n    newQuestionForm.value = event.target.value;\r\n    setQuestionForm(newQuestionForm);\r\n  };\r\n\r\n  const questionTypeHandler = (event) => {\r\n    setQuestionType({\r\n      ...questionType,\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  const addOptionHandler = () => {\r\n    setAnswers([\r\n      ...answers,\r\n      {\r\n        id: shortid.generate(),\r\n        ...answersTypes.standard,\r\n      },\r\n    ]);\r\n\r\n    window.scrollTo({\r\n      top: document.body.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const removeOptionHandler = () => {\r\n    const newAnswers = [...answers];\r\n    newAnswers.pop();\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const changeAnswerInputHandler = (event, index) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[index].value = event.target.value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const tickAsTrueHandler = (index) => {\r\n    const newAnswers = [...answers];\r\n    if (questionType.value === 'single') {\r\n      newAnswers.forEach((el, i) => {\r\n        newAnswers[i].correct = false;\r\n      });\r\n    }\r\n\r\n    newAnswers[index].correct = !newAnswers[index].correct;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const nextQuestionHandler = (finish) => {\r\n    // Validate answer\r\n    if (questionType.value === 'single' || questionType.value === 'multiple') {\r\n      if (answers.filter((el) => el.correct).length === 0) {\r\n        showToast('Mark the correct answer first!', 'error');\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (questionType.value === 'number') {\r\n      if (!answers[0].value) {\r\n        showToast('Mark the correct answer first!', 'error');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Prepare question data do send\r\n    const questionData = {\r\n      type: questionType.value,\r\n      question: questionForm.value,\r\n      answers: answers.map((el) => ({\r\n        value: el.value,\r\n        correct: el.correct,\r\n        id: shortid.generate(),\r\n      })),\r\n    };\r\n    if (!finish) {\r\n      showToast('Question added!', 'success');\r\n    }\r\n    passQuestionInfo(questionData, finish);\r\n    formRef.current.reset();\r\n    const newAnswers = [...answers];\r\n    newAnswers.forEach((el, i) => {\r\n      newAnswers[i].correct = false;\r\n    });\r\n    setAnswers(newAnswers);\r\n    // Reset question form\r\n    setQuestionType({ ...questionType, value: 'single' });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading>Add a fancy question!</Heading>\r\n      <Paragraph>don&apos;t get to fancy though...</Paragraph>\r\n      <form ref={formRef}>\r\n        <Input\r\n          id={questionType.id}\r\n          type={questionType.elementType}\r\n          elementConfig={questionType.elementConfig}\r\n          value={questionType.value}\r\n          changed={(event) => questionTypeHandler(event)}\r\n          gridArea={questionType.gridArea ? questionType.gridArea : null}\r\n        />\r\n        <Input\r\n          key={questionForm.id}\r\n          id={questionForm.id}\r\n          type={questionForm.elementType}\r\n          elementConfig={questionForm.elementConfig}\r\n          value={questionForm.value}\r\n          changed={questionInputHandler}\r\n          gridArea={questionForm.gridArea ? questionForm.gridArea : null}\r\n        />\r\n        <GridAnswersWrapper>\r\n          {answers.map((el, index) => (\r\n            <RelativeWrapper key={el.id}>\r\n              <Input\r\n                id={el.id}\r\n                type={el.elementType}\r\n                elementConfig={el.elementConfig}\r\n                value={el.value}\r\n                changed={(event) => changeAnswerInputHandler(event, index)}\r\n                gridArea={el.gridArea ? el.gridArea : null}\r\n              />\r\n              {el.tickable && (\r\n                <RadioButton\r\n                  onClick={() => tickAsTrueHandler(index)}\r\n                  ticked={el.correct}\r\n                />\r\n              )}\r\n            </RelativeWrapper>\r\n          ))}\r\n        </GridAnswersWrapper>\r\n      </form>\r\n      <FlexRowWrapper>\r\n        {moreThanOneAnswer && (\r\n          <FlexColumnWrapper>\r\n            <ButtonLink onClick={addOptionHandler}>Add option</ButtonLink>\r\n\r\n            {answers.length > 2 && (\r\n              <ButtonLink onClick={removeOptionHandler}>\r\n                Remove option\r\n              </ButtonLink>\r\n            )}\r\n          </FlexColumnWrapper>\r\n        )}\r\n        <Button onClick={() => nextQuestionHandler()}>Add Question</Button>\r\n        <Button onClick={() => nextQuestionHandler('final')} color=\"green\">\r\n          Finish Quiz\r\n        </Button>\r\n      </FlexRowWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nMakeQuestion.propTypes = {\r\n  passQuestionInfo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MakeQuestion;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n         width: 100%;\r\n         height: 100%;\r\n         display: flex;\r\n         flex-direction: column;\r\n         justify-content: center;\r\n         align-items: center;\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n           text-align: center;\r\n         }\r\n       `;\r\n\r\nexport const GridWrapper = styled.div`\r\n         display: grid;\r\n         max-width: 800px;\r\n         height: 230px;\r\n         width: 80%;\r\n         grid-template-columns: 2fr 2fr 1fr;\r\n         grid-template-rows: 1fr 3fr;\r\n         grid-gap: 20px;\r\n         grid-template-areas:\r\n           'title title button'\r\n           'description description button';\r\n\r\n         @media (max-width: ${({ theme }) => theme.medium}) {\r\n           width: 90%;\r\n           grid-template-columns: 1fr;\r\n           grid-template-rows: 1fr 2fr 1fr;\r\n           grid-template-areas:\r\n            'title'\r\n            'description'\r\n            'button'\r\n         }\r\n       `;\r\n","import React, { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\n// UI Imports\r\nimport Heading from 'components/UI/Heading';\r\nimport Paragraph from 'components/UI/Paragraph';\r\nimport Input from 'components/UI/Input';\r\nimport Button from 'components/UI/Button';\r\n\r\nimport { Wrapper, GridWrapper } from './style';\r\n\r\nconst TitlePage = ({ passInfoToBuilder }) => {\r\n  const [questionForm, setQuestionForm] = useState({\r\n    title: {\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'text',\r\n        placeholder: 'Quiz title...',\r\n        maxLength: '60',\r\n      },\r\n      value: '',\r\n      gridArea: 'title',\r\n    },\r\n    description: {\r\n      elementType: 'textarea',\r\n      elementConfig: {\r\n        type: 'text',\r\n        placeholder: 'Description (max 300 char)...',\r\n        maxLength: '300',\r\n      },\r\n      value: '',\r\n      gridArea: 'description',\r\n    },\r\n  });\r\n\r\n  const titleFormArray = Object.entries(questionForm).map((array) => {\r\n    return {\r\n      id: array[0],\r\n      config: { ...array[1] },\r\n    };\r\n  });\r\n\r\n  const changeInputHandler = (event, elId) => {\r\n    const questionElement = { ...questionForm[elId] };\r\n    questionElement.value = event.target.value;\r\n    setQuestionForm({\r\n      ...questionForm,\r\n      [elId]: { ...questionElement },\r\n    });\r\n  };\r\n\r\n  const titleData = {\r\n    title: questionForm.title.value,\r\n    description: questionForm.description.value,\r\n    id: shortid.generate(),\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading>Make your own quiz...</Heading>\r\n      <Paragraph>start with filling below form</Paragraph>\r\n      <GridWrapper>\r\n        {titleFormArray.map((el) => (\r\n          <Input\r\n            key={el.id}\r\n            id={el.id}\r\n            type={el.config.elementType}\r\n            elementConfig={el.config.elementConfig}\r\n            value={el.config.value}\r\n            changed={changeInputHandler}\r\n            gridArea={el.config.gridArea ? el.config.gridArea : null}\r\n          />\r\n        ))}\r\n        <Button gridArea=\"button\" onClick={() => passInfoToBuilder(titleData)}>\r\n          Next\r\n        </Button>\r\n      </GridWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nTitlePage.propTypes = {\r\n  passInfoToBuilder: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TitlePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuizes } from 'context/quizes';\r\n\r\n// Components Import\r\nimport ErrorModal from 'components/ErrorModal/ErrorModal';\r\nimport MakeQuestion from 'components/MakeQuestion/MakeQuestion';\r\nimport TitlePage from 'components/TitlePage/TitlePage';\r\n\r\n// It will show <MakeQuestion> and <QuizHistory> to go back and edit particular slides\r\n\r\nconst QuizBuilder = ({ match: { path }, history: { push } }) => {\r\n  const [quizInfo, setQuizInfo] = useState({\r\n    title: '',\r\n    description: '',\r\n    questions: [],\r\n  });\r\n\r\n  const [isError, setIsError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [finish, setFinish] = useState(false);\r\n\r\n  const { postQuiz } = useQuizes();\r\n\r\n  const closeError = () => {\r\n    setIsError(false);\r\n    setErrorMsg('');\r\n  };\r\n\r\n  const getTitleInfoHandler = (titlePageData) => {\r\n    if (titlePageData.title === '' || titlePageData.description === '') {\r\n      setIsError(true);\r\n      setErrorMsg('You forgot to fill the inputs!');\r\n      return;\r\n    }\r\n    push(`${path}/question/`);\r\n    setQuizInfo({\r\n      ...quizInfo,\r\n      ...titlePageData,\r\n    });\r\n  };\r\n\r\n  const getQuestionInfoHandler = (questionData, isFinish) => {\r\n    const newAnswers = [...quizInfo.questions];\r\n    newAnswers.push(questionData);\r\n    setQuizInfo({\r\n      ...quizInfo,\r\n      questions: newAnswers,\r\n    });\r\n    if (isFinish) {\r\n      setFinish(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (finish) {\r\n      const finishQuizHandler = () => {\r\n        postQuiz(quizInfo);\r\n        push(`/library`);\r\n      };\r\n      finishQuizHandler();\r\n    }\r\n  }, [quizInfo, finish, push, postQuiz]);\r\n\r\n  return (\r\n    <>\r\n      {isError && (\r\n        <ErrorModal closeModalFn={closeError} errorMessage={errorMsg} />\r\n      )}\r\n      <Switch>\r\n        <Route\r\n          path={`${path}/question/`}\r\n          render={(props) => (\r\n            <MakeQuestion\r\n              {...props}\r\n              passQuestionInfo={getQuestionInfoHandler}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${path}`}\r\n          render={(props) => (\r\n            <TitlePage {...props} passInfoToBuilder={getTitleInfoHandler} />\r\n          )}\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nQuizBuilder.propTypes = {\r\n  match: PropTypes.instanceOf(Object).isRequired,\r\n  path: PropTypes.string,\r\n  history: PropTypes.instanceOf(Object).isRequired,\r\n  push: PropTypes.func,\r\n};\r\n\r\nQuizBuilder.defaultProps = {\r\n  path: null,\r\n  push: null,\r\n};\r\n\r\nexport default QuizBuilder;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BarWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  text-align: center;\r\n  height: 30px;\r\n  border: 2px solid ${({ theme }) => theme.secondaryDark};\r\n  border-radius: 100px;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  overflow: hidden;\r\n  height: 100%;\r\n  width: ${({ progress }) => progress}%;\r\n  border-radius: 100px;\r\n`;\r\n\r\nconst ProgressColor = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme }) => theme.pink} 0%,\r\n    ${({ theme }) => theme.blue} 100%\r\n  );\r\n`;\r\n\r\nconst ProgressText = styled.p`\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  color: white;\r\n`;\r\n\r\nconst QuestionsCounter = ({ questionNumber, questionsLength }) => {\r\n  const progress = ((questionNumber / questionsLength) * 100).toFixed(2);\r\n\r\n  return (\r\n    <BarWrapper>\r\n      <ProgressText>\r\n        {questionNumber}/{questionsLength}\r\n      </ProgressText>\r\n      <ProgressBar progress={progress}>\r\n        <ProgressColor />\r\n      </ProgressBar>\r\n    </BarWrapper>\r\n  );\r\n};\r\n\r\nexport default QuestionsCounter;\r\n","import styled, { css } from 'styled-components';\r\nimport doneIcon from 'assets/icons/done.svg';\r\nimport arrowIcon from 'assets/icons/select_arrow_down.svg';\r\n\r\nexport const QuestionStyled = styled.p`\r\n  margin: 35px auto;\r\n  color: ${({ theme }) => theme.lightGrey};\r\n  font-size: ${({ theme }) => theme.textSize.m};\r\n`;\r\n\r\nexport const NumberInput = styled.input`\r\n  background-color: #23314f;\r\n  color: ${({ theme }) => theme.lightGrey};\r\n  max-width: 500px;\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 0 30px;\r\n  border: 2px solid ${({ theme }) => theme.secondary};\r\n  border-radius: 15px;\r\n  box-shadow: 4px 10px 15px rgba(0, 0, 0, 0.1);\r\n  appearance: textarea;\r\n\r\n  ${({ userStage, theme }) => {\r\n    if (userStage === 'correct') {\r\n      return css`\r\n        border-color: ${theme.green};\r\n      `;\r\n    }\r\n\r\n    if (userStage === 'wrong') {\r\n      return css`\r\n        border-color: ${theme.pink};\r\n      `;\r\n    }\r\n\r\n    return undefined;\r\n  }}\r\n\r\n  ::-webkit-inner-spin-button {\r\n    appearance: none;\r\n  }\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: #2a3959;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const AnswerWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: #23314f;\r\n  max-width: 500px;\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 0 30px;\r\n  border: 2px solid ${({ theme }) => theme.secondary};\r\n  border-radius: 15px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 4px 10px 15px rgba(0, 0, 0, 0.1);\r\n  &,\r\n  & > * {\r\n    cursor: pointer;\r\n  }\r\n  :hover {\r\n    background-color: #2a3959;\r\n  }\r\n\r\n  ::before {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    content: '';\r\n    width: 18px;\r\n    height: 18px;\r\n    border-radius: ${({ multiple }) => (multiple ? '5px' : '50px')};\r\n    border: 2px solid ${({ theme }) => theme.secondary};\r\n\r\n    ${({ clicked }) =>\r\n      clicked &&\r\n      css`\r\n        background-color: ${({ theme }) => theme.blue};\r\n        background-image: url(${doneIcon});\r\n        background-repeat: no-repeat;\r\n        background-position: center 55%;\r\n        background-size: 65%;\r\n        border: none;\r\n      `}\r\n  }\r\n\r\n  ${({ userStage, clicked, isCorrect, theme, id }) => {\r\n    if (userStage === 'correct' && isCorrect) {\r\n      return css`\r\n        border-color: ${theme.green};\r\n      `;\r\n    }\r\n\r\n    if (userStage === 'wrong' && clicked && !isCorrect) {\r\n      return css`\r\n        border-color: ${theme.pink};\r\n      `;\r\n    }\r\n\r\n    if (userStage === 'wrong' && isCorrect) {\r\n      return css`\r\n        border-color: ${theme.green};\r\n      `;\r\n    }\r\n\r\n    // Boolean border after check\r\n    if (id === 'true' || id === 'false') {\r\n      if (userStage === 'correct' && clicked) {\r\n        return css`\r\n          border-color: ${theme.green};\r\n        `;\r\n      }\r\n    }\r\n    return undefined;\r\n  }}\r\n`;\r\n\r\nexport const NumberInputWrapper = styled.div`\r\n  position: relative;\r\n  height: auto;\r\n  width: auto;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const NumberControlWrapper = styled.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const NumberControl = styled.div`\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url(${arrowIcon});\r\n  background-position: center center;\r\n  background-size: 100%;\r\n  background-repeat: no-repeat;\r\n\r\n  :nth-of-type(1) {\r\n    transform: rotate(180deg);\r\n  }\r\n  :hover {\r\n    filter: brightness(1.2);\r\n  }\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n  color: ${({ theme }) => theme.lightGrey};\r\n  font-size: ${({ theme }) => theme.textSize.s};\r\n`;\r\nexport const InputStyled = styled.input`\r\n  :checked,\r\n  :not(checked) {\r\n    position: absolute;\r\n    left: -9999px;\r\n  }\r\n\r\n  label {\r\n    color: red;\r\n  }\r\n`;\r\n\r\nexport const Message = styled.p`\r\n  color: ${({ theme }) => theme.green};\r\n  margin-bottom: 15px;\r\n\r\n  ${({ type }) =>\r\n    type === 'wrong' &&\r\n    css`\r\n      color: ${({ theme }) => theme.pink};\r\n    `}\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// UI Imports\r\nimport Button from 'components/UI/Button';\r\n\r\nimport {\r\n  QuestionStyled,\r\n  NumberInput,\r\n  AnswerWrapper,\r\n  NumberInputWrapper,\r\n  NumberControlWrapper,\r\n  NumberControl,\r\n  LabelStyled,\r\n  InputStyled,\r\n  Message,\r\n} from './style';\r\n\r\nconst QuestionsList = ({\r\n  type,\r\n  question,\r\n  answers,\r\n  checkCorrectFn,\r\n  nextPageFn,\r\n  userStage,\r\n}) => {\r\n  const [clicked, setClicked] = useState({});\r\n  const [numberValue, setNumberValue] = useState('');\r\n  const [resultCounter, setResultCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (userStage === 'correct') {\r\n      setResultCounter(resultCounter + 1);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [setResultCounter, userStage]);\r\n\r\n  useEffect(() => {\r\n    setClicked({});\r\n  }, [type]);\r\n\r\n  const clickAnswerHandler = (e) => {\r\n    if (clicked[e.target.id]) {\r\n      setClicked({\r\n        [e.target.id]: !clicked[e.target.id],\r\n      });\r\n    } else {\r\n      setClicked({\r\n        [e.target.id]: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const clickMultiAnswerHandler = (e) => {\r\n    if (clicked[e.target.id]) {\r\n      setClicked({\r\n        ...clicked,\r\n        [e.target.id]: !clicked[e.target.id],\r\n      });\r\n    } else {\r\n      setClicked({\r\n        ...clicked,\r\n        [e.target.id]: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const numberInputHandler = (e) => {\r\n    setNumberValue(e.target.value);\r\n  };\r\n\r\n  const numberControlHandler = (methodType) => {\r\n    if (methodType === 'increment') {\r\n      setNumberValue(Math.floor(numberValue) + 1);\r\n    } else if (methodType === 'decrement') {\r\n      setNumberValue(Math.floor(numberValue) - 1);\r\n    }\r\n  };\r\n\r\n  const nextQuestionHandler = () => {\r\n    setClicked({});\r\n    nextPageFn(resultCounter);\r\n  };\r\n\r\n  let answersRender;\r\n  switch (type) {\r\n    case 'single':\r\n    case 'multiple':\r\n      answersRender = answers.map((el) => (\r\n        <AnswerWrapper\r\n          multiple={type === 'multiple'}\r\n          key={el.value}\r\n          id={el.id}\r\n          clicked={clicked[el.id]}\r\n          isCorrect={el.correct}\r\n          userStage={userStage}\r\n          onClick={\r\n            type === 'single' ? clickAnswerHandler : clickMultiAnswerHandler\r\n          }\r\n        >\r\n          <InputStyled type=\"radio\" id={el.id} name=\"drone\" value={el.id} />\r\n          <LabelStyled htmlFor={el.id} id={el.id}>\r\n            {el.value}\r\n          </LabelStyled>\r\n        </AnswerWrapper>\r\n      ));\r\n      break;\r\n    case 'boolean':\r\n      answersRender = (\r\n        <>\r\n          <AnswerWrapper\r\n            id=\"true\"\r\n            clicked={clicked.true}\r\n            onClick={clickAnswerHandler}\r\n            userStage={userStage}\r\n          >\r\n            <InputStyled type=\"radio\" id=\"true\" value=\"true\" name=\"true\" />\r\n            <LabelStyled htmlFor=\"true\" id=\"true\">\r\n              True\r\n            </LabelStyled>\r\n          </AnswerWrapper>\r\n          <AnswerWrapper\r\n            id=\"false\"\r\n            clicked={clicked.false}\r\n            onClick={clickAnswerHandler}\r\n            userStage={userStage}\r\n          >\r\n            <InputStyled type=\"radio\" id=\"false\" value=\"false\" name=\"false\" />\r\n            <LabelStyled htmlFor=\"false\" id=\"false\">\r\n              False\r\n            </LabelStyled>\r\n          </AnswerWrapper>\r\n        </>\r\n      );\r\n      break;\r\n    case 'number':\r\n      answersRender = (\r\n        <NumberInputWrapper>\r\n          <NumberInput\r\n            type=\"number\"\r\n            id=\"false\"\r\n            value={numberValue}\r\n            onChange={numberInputHandler}\r\n            name=\"false\"\r\n            placeholder=\"Enter value\"\r\n            userStage={userStage}\r\n          />\r\n          <NumberControlWrapper>\r\n            <NumberControl onClick={() => numberControlHandler('increment')} />\r\n            <NumberControl onClick={() => numberControlHandler('decrement')} />\r\n          </NumberControlWrapper>\r\n        </NumberInputWrapper>\r\n      );\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  let button;\r\n  switch (userStage) {\r\n    case 'selecting':\r\n      button = (\r\n        <Button onClick={() => checkCorrectFn(clicked, type, numberValue)}>\r\n          Check\r\n        </Button>\r\n      );\r\n      break;\r\n    case 'correct':\r\n      button = (\r\n        <>\r\n          <Message type={userStage}>Good answer!</Message>\r\n          <Button color=\"green\" onClick={nextQuestionHandler}>\r\n            Next\r\n          </Button>\r\n        </>\r\n      );\r\n      break;\r\n    case 'wrong':\r\n      button = (\r\n        <>\r\n          <Message type={userStage}>\r\n            Whoops... wrong!\r\n            <br />\r\n            {type === 'number' && `Correct answer: ${answers[0].value}`}\r\n          </Message>\r\n          <Button color=\"pink\" onClick={nextQuestionHandler}>\r\n            Next\r\n          </Button>\r\n        </>\r\n      );\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <>\r\n      <QuestionStyled>{question}</QuestionStyled>\r\n      {answersRender}\r\n      {button}\r\n    </>\r\n  );\r\n};\r\n\r\nQuestionsList.propTypes = {\r\n  type: PropTypes.oneOf(['single', 'multiple', 'number', 'boolean']).isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  answers: PropTypes.instanceOf(Array).isRequired,\r\n  userStage: PropTypes.oneOf(['correct', 'wrong', 'selecting']).isRequired,\r\n  checkCorrectFn: PropTypes.func.isRequired,\r\n  nextPageFn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default QuestionsList;\r\n","import styled from 'styled-components';\r\nimport Heading from 'components/UI/Heading';\r\nimport Paragraph from 'components/UI/Paragraph';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding-top: 90px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nexport const HeadingStyled = styled(Heading)`\r\n  font-size: ${({ theme }) => theme.textSize.l};\r\n  color: ${({ theme }) => theme.lightGrey};\r\n`;\r\n\r\nexport const ParagraphStyled = styled(Paragraph)`\r\n  font-size: ${({ theme }) => theme.textSize.s};\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useToastify } from 'hooks/useToastify';\r\nimport { useQuizes } from 'context/quizes';\r\nimport ErrorModal from 'components/ErrorModal/ErrorModal';\r\n\r\n// UI Imports\r\nimport Spinner from 'components/UI/Spinner';\r\nimport QuestionsCounter from 'components/UI/QuestionsCounter';\r\nimport QuestionsList from 'components/QuestionsList/QuestionsList';\r\nimport { Wrapper, HeadingStyled, ParagraphStyled } from './style';\r\n\r\nconst QuizPlayer = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n  history: { push },\r\n}) => {\r\n  // Shows user stage ('selecting'/'wrong'/'correct')\r\n  const [actualStage, setActualStage] = useState('selecting');\r\n  const [actualPage, setActualPage] = useState(0);\r\n  const {\r\n    fetchSingleQuiz,\r\n    quizes,\r\n    quizesState: { loading, error, errorMsg },\r\n    clearError,\r\n  } = useQuizes();\r\n  const { showToast } = useToastify();\r\n\r\n  let quiz;\r\n  if (quizes) quiz = quizes.find((el) => el.id === id);\r\n  const currentQuestion = quiz ? quiz.questions[actualPage] : undefined;\r\n\r\n  useEffect(() => {\r\n    if (quizes.length === 0) {\r\n      fetchSingleQuiz(id);\r\n    }\r\n  }, [fetchSingleQuiz, id, quizes.length]);\r\n\r\n  const nextPageHandler = (result) => {\r\n    if (actualPage === quiz.questions.length - 1) {\r\n      push({\r\n        pathname: '/result',\r\n        state: {\r\n          title: quiz.title,\r\n          result,\r\n          questionsNumber: quiz.questions.length,\r\n        },\r\n      });\r\n    }\r\n\r\n    setActualPage(actualPage + 1);\r\n    setActualStage('selecting');\r\n  };\r\n\r\n  const checkCorrectHandler = (answers, answerType, numberValue) => {\r\n    let userAnswers;\r\n    let correctAnswers;\r\n\r\n    if (Object.keys(answers).length === 0 && !numberValue) {\r\n      showToast('Pass the answer first!', 'error');\r\n      return;\r\n    }\r\n\r\n    if (answerType === 'number') {\r\n      userAnswers = numberValue;\r\n      correctAnswers = currentQuestion.answers[0].value;\r\n    } else if (answerType === 'boolean') {\r\n      userAnswers = Object.keys(answers).join('');\r\n      correctAnswers = currentQuestion.answers[0].value;\r\n    } else {\r\n      userAnswers = Object.keys(answers);\r\n      correctAnswers = currentQuestion.answers\r\n        .filter((el) => el.correct === true)\r\n        .map((answerObj) => answerObj.id);\r\n    }\r\n\r\n    if (!userAnswers) {\r\n      showToast('Pass the answer first!', 'error');\r\n      return;\r\n    }\r\n\r\n    // Check correct answers for single and multiple question\r\n    if (answerType === 'single' || answerType === 'multiple') {\r\n      if (userAnswers.sort().join('') === correctAnswers.sort().join('')) {\r\n        setActualStage('correct');\r\n      } else {\r\n        setActualStage('wrong');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // Check correct answers for boolean and number question\r\n    if (`${userAnswers}` === correctAnswers) {\r\n      setActualStage('correct');\r\n    } else {\r\n      setActualStage('wrong');\r\n    }\r\n\r\n    window.scrollTo({\r\n      top: document.body.scrollHeight,\r\n      method: 'smooth'\r\n    })\r\n  };\r\n  const content = quiz ? (\r\n    <>\r\n      <HeadingStyled>{quiz.title}</HeadingStyled>\r\n      <ParagraphStyled>{quiz.description}</ParagraphStyled>\r\n      <QuestionsCounter\r\n        questionNumber={actualPage + 1}\r\n        questionsLength={quiz.questions.length}\r\n      />\r\n      <QuestionsList\r\n        type={currentQuestion.type}\r\n        question={currentQuestion.question}\r\n        answers={currentQuestion.answers}\r\n        checkCorrectFn={checkCorrectHandler}\r\n        nextPageFn={nextPageHandler}\r\n        userStage={actualStage}\r\n      />\r\n    </>\r\n  ) : (\r\n    <Spinner />\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      {error && (\r\n        <ErrorModal closeModalFn={clearError} errorMessage={errorMsg} />\r\n      )}\r\n      {loading ? <Spinner /> : content}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nQuizPlayer.propTypes = {\r\n  history: PropTypes.instanceOf(Object).isRequired,\r\n  match: PropTypes.instanceOf(Object).isRequired,\r\n  id: PropTypes.string,\r\n};\r\n\r\nQuizPlayer.defaultProps = {\r\n  id: undefined,\r\n};\r\n\r\nexport default QuizPlayer;\r\n","import styled from 'styled-components';\r\n\r\nimport Heading from 'components/UI/Heading';\r\nimport Paragraph from 'components/UI/Paragraph';\r\nimport thatsAllText from 'assets/thatsAllText.svg';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: calc(100% - 90px);\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    padding-top: 120px;\r\n  }\r\n`;\r\n\r\nexport const MainTextWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const MainText = styled.h2`\r\n  position: relative;\r\n  display: block;\r\n  font-size: 0;\r\n  width: 450px;\r\n  height: 90px;\r\n  color: ${({ theme }) => theme.mainBg};\r\n  background: url(${thatsAllText}) center center no-repeat;\r\n  background-size: 100%;\r\n\r\n  @media (max-width: ${({ theme }) => theme.medium}) {\r\n    min-width: 300px;\r\n    width: 90%;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    width: 85vw;\r\n  }\r\n`;\r\n\r\nexport const CircleOne = styled.div`\r\n  position: absolute;\r\n  top: -50%;\r\n  left: -10%;\r\n  width: 110px;\r\n  height: 110px;\r\n  border-radius: 200px;\r\n  background-color: #0e9259;\r\n  z-index: -10;\r\n`;\r\n\r\nexport const CircleTwo = styled.div`\r\n  position: absolute;\r\n  bottom: -20%;\r\n  left: 20%;\r\n  width: 26px;\r\n  height: 26px;\r\n  border-radius: 200px;\r\n  background-color: #207ca6;\r\n  z-index: -10;\r\n`;\r\n\r\nexport const CircleThree = styled.div`\r\n  position: absolute;\r\n  top: -20%;\r\n  left: 45%;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 200px;\r\n  background-color: #78af1b;\r\n  z-index: -10;\r\n`;\r\n\r\nexport const CircleFour = styled.div`\r\n  position: absolute;\r\n  top: 10%;\r\n  left: 65%;\r\n  width: 43px;\r\n  height: 43px;\r\n  border-radius: 200px;\r\n  background-color: #942864;\r\n  z-index: -10;\r\n`;\r\n\r\nexport const CircleFive = styled.div`\r\n  position: absolute;\r\n  bottom: -20%;\r\n  left: 85%;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 200px;\r\n  background-color: #0e9295;\r\n  z-index: -10;\r\n`;\r\n\r\nexport const HeadingStyled = styled(Heading)`\r\n  color: ${({ theme }) => theme.lightGrey};\r\n  margin: 6px 0 12px;\r\n`;\r\n\r\nexport const ParagraphStyled = styled(Paragraph)`\r\n  font-weight: ${({ theme }) => theme.light};\r\n  font-size: 2.4rem;\r\n  margin: 20px 0 6px 0;\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nexport const ResultStyled = styled(Paragraph)`\r\n  font-weight: ${({ theme }) => theme.light};\r\n  font-size: 2.4rem;\r\n\r\n  strong {\r\n    font-weight: ${({ theme }) => theme.bold};\r\n    color: ${({ theme }) => theme.lightGrey};\r\n  }\r\n\r\n  span {\r\n    font-weight: ${({ theme }) => theme.bold};\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.small}) {\r\n    font-size: 1.8rem;\r\n\r\n    span {\r\n      font-size: 1.3rem;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// UI Imports\r\nimport Button from 'components/UI/Button';\r\nimport {\r\n  Wrapper,\r\n  MainTextWrapper,\r\n  MainText,\r\n  CircleOne,\r\n  CircleTwo,\r\n  CircleThree,\r\n  CircleFour,\r\n  CircleFive,\r\n  HeadingStyled,\r\n  ParagraphStyled,\r\n  ResultStyled,\r\n} from './style';\r\n\r\nconst Result = ({ location, history: { push } }) => {\r\n  let title;\r\n  let result;\r\n  let questionsNumber;\r\n\r\n  if (location.state) {\r\n    title = location.state.title;\r\n    result = location.state.result;\r\n    questionsNumber = location.state.questionsNumber;\r\n  }\r\n\r\n  const percent = Math.round((result / questionsNumber) * 100);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MainTextWrapper>\r\n        <MainText>That&apos;s all!</MainText>\r\n        <CircleOne />\r\n        <CircleTwo />\r\n        <CircleThree />\r\n        <CircleFour />\r\n        <CircleFive />\r\n      </MainTextWrapper>\r\n      <ParagraphStyled>You&apos;ve finished the quiz</ParagraphStyled>\r\n      <HeadingStyled>{title}</HeadingStyled>\r\n      <ResultStyled>\r\n        Your result:{' '}\r\n        <strong>\r\n          {result}/{questionsNumber}\r\n        </strong>{' '}\r\n        <span>({percent}%)</span>\r\n      </ResultStyled>\r\n      <Button color=\"green\" onClick={() => push('/')}>\r\n        Finish\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nResult.propTypes = {\r\n  location: PropTypes.instanceOf(Object).isRequired,\r\n  history: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Result;\r\n","import styled from 'styled-components';\r\n\r\nimport Button from 'components/UI/Button';\r\nimport ButtonLink from 'components/UI/ButtonLink';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 90px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ButtonLinkStyled = styled(ButtonLink)`\r\n  font-size: ${({ theme }) => theme.textSize.xs};\r\n  margin-top: 15px;\r\n`;\r\n\r\nexport const ButtonStyled = styled(Button)`\r\n  margin-top: 25px;\r\n`;\r\n\r\nexport const FormStyled = styled.form`\r\n  margin-top: 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 90%;\r\n  max-width: 400px;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport { useAuth } from 'context/auth';\r\nimport { useToastify } from 'hooks/useToastify';\r\n\r\n// UI Imports\r\nimport Input from 'components/UI/Input';\r\nimport Heading from 'components/UI/Heading';\r\nimport Spinner from 'components/UI/Spinner';\r\nimport { Wrapper, ButtonLinkStyled, ButtonStyled, FormStyled } from './style';\r\n\r\nconst Auth = ({ location: { pathname }, history: { push } }) => {\r\n  const [isLoginPage] = useState(pathname === '/login');\r\n  const [inputs, setInputs] = useState([\r\n    {\r\n      id: shortid.generate(),\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'email',\r\n        placeholder: 'E-mail',\r\n      },\r\n      value: '',\r\n      correct: false,\r\n      tickable: false,\r\n    },\r\n    {\r\n      id: shortid.generate(),\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'password',\r\n        placeholder: 'Password',\r\n      },\r\n      value: '',\r\n      correct: false,\r\n      tickable: false,\r\n    },\r\n  ]);\r\n  const { showToast } = useToastify();\r\n\r\n  const { authState, authFn } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (authState.token) {\r\n      push('/');\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newInputs = [...inputs];\r\n    if (isLoginPage && inputs.length > 2) {\r\n      newInputs.pop();\r\n      setInputs(newInputs);\r\n    } else if (!isLoginPage) {\r\n      newInputs.push({\r\n        id: shortid.generate(),\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'password',\r\n          placeholder: 'Confirm password',\r\n        },\r\n        value: '',\r\n        correct: false,\r\n        tickable: false,\r\n      });\r\n      setInputs(newInputs);\r\n    }\r\n    // Update only on route change\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isLoginPage]);\r\n\r\n  const changeAnswerInputHandler = (event, index) => {\r\n    const newInputs = [...inputs];\r\n    newInputs[index].value = event.target.value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const togglePage = () => {\r\n    if (isLoginPage) {\r\n      push('/register');\r\n    } else {\r\n      push('/login');\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const email = inputs[0].value;\r\n    const password = inputs[1].value;\r\n\r\n    if (!isLoginPage) {\r\n      const passwordConfirm = inputs[2].value;\r\n      if (password !== passwordConfirm) {\r\n        showToast('Passed passwords are different', 'error');\r\n      } else {\r\n        authFn(email, password, 'register');\r\n      }\r\n    } else {\r\n      authFn(email, password, 'login');\r\n    }\r\n  };\r\n\r\n  let form;\r\n  if (authState.loading) {\r\n    form = <Spinner />;\r\n  } else {\r\n    form = inputs.map((el, index) => (\r\n      <Input\r\n        key={el.id}\r\n        type={el.elementType}\r\n        elementConfig={el.elementConfig}\r\n        changed={(e) => changeAnswerInputHandler(e, index)}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading>{isLoginPage ? 'Sign in' : 'Sign up'}</Heading>\r\n      <FormStyled>\r\n        {form}\r\n        <ButtonStyled type=\"submit\" onClick={submitHandler}>\r\n          {isLoginPage ? 'Login' : 'Sign up'}\r\n        </ButtonStyled>\r\n        <ButtonLinkStyled onClick={togglePage}>\r\n          {isLoginPage\r\n            ? `Don't have account? Sign up!`\r\n            : 'Already registered? Sign in!'}\r\n        </ButtonLinkStyled>\r\n      </FormStyled>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nAuth.propTypes = {\r\n  location: PropTypes.instanceOf(Object).isRequired,\r\n  history: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuth } from 'context/auth';\r\n\r\nconst Logout = () => {\r\n  const { logoutFn } = useAuth();\r\n\r\n  useEffect(() => {\r\n    logoutFn();\r\n  }, [logoutFn]);\r\n\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport QuizesProvider from 'context/quizes';\r\nimport { useAuth } from 'context/auth';\r\nimport PrivateRoute from 'components/PrivateRoute/PrivateRoute';\r\nimport { useToastify } from 'hooks/useToastify';\r\nimport Navigation from 'components/Navigation/Navigation';\r\nimport MobileNavigation from 'components/Navigation/MobileNavigation/MobileNavigation';\r\n\r\n// Theme Provider & Global Style Imports\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport theme from 'theme/theme';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\n\r\n// Routes components\r\nimport HomePage from 'views/HomePage/HomePage';\r\nimport QuizLibrary from 'views/QuizLibrary/QuizLibrary';\r\nimport QuizBuilder from 'views/QuizBuilder/QuizBuilder';\r\nimport QuizPlayer from 'views/QuizPlayer/QuizPlayer';\r\nimport Result from 'views/Result/Result';\r\nimport Auth from 'views/Auth/Auth';\r\nimport Logout from 'components/Logout/Logout';\r\n\r\nconst ContentWrapperStyled = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  padding: 0 40px 0 220px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: ${({ theme: globalTheme }) => globalTheme.small}) {\r\n    padding: 0 20px;\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  const { ToastContainer } = useToastify();\r\n  const { autoAuthCheck } = useAuth();\r\n\r\n  useEffect(() => {\r\n    autoAuthCheck();\r\n  }, [autoAuthCheck]);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <ThemeProvider theme={theme}>\r\n        <Navigation />\r\n        <MobileNavigation />\r\n        <ToastContainer />\r\n        <ContentWrapperStyled>\r\n          <Switch>\r\n            <QuizesProvider>\r\n              <Route path=\"/library\" component={QuizLibrary} />\r\n              <PrivateRoute path=\"/make-quiz\" component={QuizBuilder} />\r\n              <Route path=\"/quiz/:id\" component={QuizPlayer} />\r\n              <Route path=\"/result\" component={Result} />\r\n              <Route path=\"/login\" component={Auth} />\r\n              <Route path=\"/register\" component={Auth} />\r\n              <Route path=\"/logout\" component={Logout} />\r\n              <Route path=\"/\" exact component={HomePage} />\r\n            </QuizesProvider>\r\n          </Switch>\r\n        </ContentWrapperStyled>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport AuthProvider from 'context/auth';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <BrowserRouter basename=\"/QuickQuizMaker/\">\r\n        <App />\r\n      </BrowserRouter>\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}